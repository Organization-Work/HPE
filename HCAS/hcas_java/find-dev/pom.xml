<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
<!-- commit test1 -->
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.autonomy</groupId>
		<artifactId>master</artifactId>
		<version>1.0.6</version>
	</parent>

	<groupId>autonomy</groupId>
	<artifactId>discover</artifactId>
	<packaging>war</packaging>
	<version>2.3.0</version>
	<name>discover</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>		
		<project.changelist>-dev</project.changelist>
		<source.java.version>1.8</source.java.version>	
		<project.build.tiemstamp>${maven.build.timestamp}</project.build.tiemstamp>	
		<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>		
		<rename.tmp.directory>${project.build.directory}/rename_tmp</rename.tmp.directory>
		<rename.file.suffix>${project.version}_b${project.changelist}_T${project.build.tiemstamp}</rename.file.suffix>
	</properties>

	<profiles>
		<profile>
			<!-- This profile activates if you have a P4_CHANGELIST env variable set 
				in your environment, e.g. for release engineering builds. If you do have 
				P4_CHANGELIST set, you'll need to explicitly choose a profile as well, e.g. 
				`mvn -Phealthcare package`; it won't default to the 'dev' profile unless 
				P4_CHANGELIST isn't set. -->
			<id>p4_changelist</id>
			<properties>
				<project.changelist>${env.P4_CHANGELIST}</project.changelist>
				<project.build_id>${env.BUILD_ID}</project.build_id>
			</properties>
			<activation>
				<property>
					<name>env.P4_CHANGELIST</name> 
				</property>
			</activation>
		</profile>
		<profile>
            <id>dbg</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <env>dbg</env>
            </properties>
            <build>
                <finalName>${project.artifactId}-${env}</finalName>
                <resources>
		            <resource>
		                <directory>src/main/resources</directory>
		                <filtering>true</filtering>
		            </resource>
		            <resource>
		                <directory>src/main/resources/hca_config</directory>
		                <filtering>true</filtering>
		           </resource>
                </resources>
            </build>
        </profile>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<env>dev</env>
			</properties>
			<build>
				<finalName>${project.artifactId}-${env}</finalName>
			</build>
		</profile>
		<profile>
			<id>test</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<env>dev</env>
			</properties>
			<build>
				<finalName>${project.artifactId}-${env}</finalName>
			</build>
		</profile>
		<profile>
			<id>production</id>
			<properties>
				<env>production</env>
			</properties>
			<build>
				<finalName>${project.artifactId}</finalName>
			</build>
		</profile>
		<profile>
			<id>production-dev</id>
			<properties>
				<env>production-dev</env>
			</properties>
			<build>
				<finalName>${project.artifactId}-production-dev</finalName>
			</build>
		</profile>
		<profile>
			<id>pubmed</id>
			<properties>
				<env>pubmed</env>
			</properties>
			<build>
				<finalName>${project.artifactId}</finalName>
			</build>
		</profile>
		<profile>
			<id>healthcare</id>
			<properties>
				<env>healthcare</env>
			</properties>
			<build>
				<finalName>${project.artifactId}-hc</finalName>
			</build>
		</profile>
		<profile>
			<id>demo</id>
			<properties>
				<env>demo</env>
			</properties>
			<build>
				<finalName>${project.artifactId}-hc</finalName>
			</build>
		</profile>
		<profile>
			<id>staging</id>
			<properties>
				<env>staging</env>
			</properties>
			<build>
				<finalName>${project.artifactId}-staging</finalName>
			</build>
		</profile>
		<profile>
			<id>qa</id>
			<properties>
				<env>qa</env>
			</properties>
			<build>
				<finalName>${project.artifactId}-qa</finalName>
			</build>
		</profile>
	</profiles>


	<build>
		<filters>
			<filter>src/main/filters/filter-common.properties</filter>
			<filter>src/main/filters/filter-${env}.properties</filter>
		</filters>
		<testResources>
			<testResource>
				<directory>src/main/resources/hca_config</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		
		<plugins>
		
				<plugin>
				 	<groupId>org.apache.maven.plugins</groupId>
			        <artifactId>maven-antrun-plugin</artifactId>
			        <version>1.8</version>
			        <executions>
			          <execution>		            
			            <id>rename-resources</id>
			            <phase>process-resources</phase>
			            <goals>
			              <goal>run</goal>
			            </goals>
			            <configuration>
			              <target>
			                <!-- copy renamed files. -->
			                 <copy todir="${rename.tmp.directory}/scripts/">
			                   <fileset dir="src/main/webapp/scripts/">
			                     <include name="**/*.js" />
			                   </fileset>
			                   <!-- See other Mappers available at http://ant.apache.org/manual/Types/mapper.html -->
			                   <mapper type="glob" from="*.js" to="*-${rename.file.suffix}.js"/>
			                 </copy>
			                  <copy todir="${rename.tmp.directory}/css/">
			                   <fileset dir="src/main/webapp/css/">
			                     <include name="**/*.css" />			                   
			                   </fileset>
			                   <!-- See other Mappers available at http://ant.apache.org/manual/Types/mapper.html -->
			                   <mapper type="glob" from="*.css" to="*-${rename.file.suffix}.css"/>
			                 </copy>
			                 <copy todir="${rename.tmp.directory}/img_logos/">
			                   <fileset dir="src/main/webapp/img_logos/">
			                     <include name="**/*.gif" />			                   
			                   </fileset>
			                   <!-- See other Mappers available at http://ant.apache.org/manual/Types/mapper.html -->
			                   <mapper type="glob" from="*.gif" to="*-${rename.file.suffix}.gif"/>			                
			                 </copy>
			                  <copy todir="${rename.tmp.directory}/img_logos/">
			                   <fileset dir="src/main/webapp/img_logos/">
			                     <include name="**/*.png" />			                   
			                   </fileset>
			                   <!-- See other Mappers available at http://ant.apache.org/manual/Types/mapper.html -->
			                   <mapper type="glob" from="*.png" to="*-${rename.file.suffix}.png"/>			                
			                 </copy>
			                 <copy todir="${rename.tmp.directory}/img_logos/">
			                   <fileset dir="src/main/webapp/img_logos/">
			                     <include name="**/*.ico" />			                   
			                   </fileset>
			                   <!-- See other Mappers available at http://ant.apache.org/manual/Types/mapper.html -->
			                   <mapper type="glob" from="*.ico" to="*-${rename.file.suffix}.ico"/>			                
			                 </copy>
			                 <copy todir="${rename.tmp.directory}/img_logos/">
			                   <fileset dir="src/main/webapp/img_logos/">
			                     <include name="**/*.jpg" />			                   
			                   </fileset>
			                   <!-- See other Mappers available at http://ant.apache.org/manual/Types/mapper.html -->
			                   <mapper type="glob" from="*.jpg" to="*-${rename.file.suffix}.jpg"/>			                
			                 </copy>
			                 <copy todir="${rename.tmp.directory}/templates/search/">
			                   <fileset dir="src/main/webapp/templates/search/">
			                     <include name="**/*.template" />
			                   </fileset>
			                   <!-- See other Mappers available at http://ant.apache.org/manual/Types/mapper.html -->
			                   <mapper type="glob" from="*.template" to="*-${rename.file.suffix}.template"/>
			                 </copy>
			               </target>			               
			            </configuration>
			          </execution>
			        </executions>
      			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
				        <archive>
				          <manifest>
				            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
				          </manifest>
				          <manifestEntries>
				            <BuildId>${project.build_id}</BuildId>
				          </manifestEntries>
				        </archive>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
					<packagingExcludes>WEB-INF/classes/hca_config/**</packagingExcludes>
					 <!-- We do no let the maven-war-plugin take care of files that will be renamed. 
			          Paths defined relative to warSourceDirectory (default is ${basedir}/src/main/webapp) -->
			          <warSourceExcludes>scripts/, css/, img_logos/, templates/search/</warSourceExcludes>			       
			          <webResources>
			          <!-- include the resources renamed by maven-antrun-plugin, 
			          at the root of the WAR file -->
			            <resource>
			              <directory>${rename.tmp.directory}</directory>
			              <includes>
			                <include>**/*</include>
			              </includes>
			            </resource>
			          </webResources>
					 
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<debug>true</debug>
					<debuglevel>lines,vars,source</debuglevel>
				</configuration>
				<executions>
					<execution>
						<id>default-testCompile</id>
						<phase>test-compile</phase>
						<configuration>
							<excludes>
								<exclude>hca_config/**</exclude>
							</excludes>
						</configuration>
						<goals>

							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptor>src/main/assembly/dist.xml</descriptor>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/discover-${env}</path>
					<port>8082</port>
					<warDirectory>${basedir}/target/discover-${env}</warDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>install</id>
						<phase>install</phase>
						<goals>
							<goal>sources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<parallel>methods</parallel>
					<threadCount>10</threadCount>
					<useSystemClassLoader>true</useSystemClassLoader>
				</configuration>				
			</plugin>	

		</plugins>
		
		  <!-- When running server from Eclipse, we need to tell m2e to execute 
		    maven-antrun-plugin to rename files, by default it doesn't. We need to modify the life cycle mapping. -->
		    <pluginManagement>
		      <plugins>
		        <!-- This plugin is not a real one, it is only used by m2e to obtain 
		        config information. This is why it needs to be put in the section 
		        pluginManagement, otherwise Maven would try to download it. -->
		        <plugin>
		          <groupId>org.eclipse.m2e</groupId>
		          <artifactId>lifecycle-mapping</artifactId>
		          <version>1.0.0</version>
		          <configuration>
		            <lifecycleMappingMetadata>
		              <pluginExecutions>
		                <pluginExecution>
		                  <pluginExecutionFilter>
		                    <groupId>org.apache.maven.plugins</groupId>
		                    <artifactId>maven-antrun-plugin</artifactId>
		                    <versionRange>[1.0.0,)</versionRange>
		                    <goals>
		                      <goal>run</goal>
		                    </goals>
		                  </pluginExecutionFilter>
		                  <action>
		                    <execute>
		                      <!-- set to true, otherwise changes are not seen, 
		                      e.g., to a css file, and you would need to perform 
		                      a project update each time. -->
		                      <runOnIncremental>true</runOnIncremental>
		                    </execute >
		                  </action>
		                </pluginExecution>
		              </pluginExecutions>
		            </lifecycleMappingMetadata>
		          </configuration>
		        </plugin>
		      </plugins>
		    </pluginManagement>
		
	</build>

	<dependencies>
		<dependency>
			<groupId>net.sourceforge.saxon</groupId>
			<artifactId>saxon</artifactId>
			<version>9.1.0.8</version>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.saxon</groupId>
			<artifactId>saxon</artifactId>
			<version>9.1.0.8</version>
			<classifier>s9api</classifier>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.saxon</groupId>
			<artifactId>saxon</artifactId>
			<version>9.1.0.8</version>
			<classifier>dom</classifier>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>3.2.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>3.2.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>3.2.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>3.2.5.RELEASE</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>3.2.5.RELEASE</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.jasig.cas.client</groupId>
			<artifactId>cas-client-core</artifactId>
			<version>3.2.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.ehcache-spring-annotations</groupId>
			<artifactId>ehcache-spring-annotations</artifactId>
			<version>1.2.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.4</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.4</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>0.11.2</version>
		</dependency>
		<!-- Jackson JSON Mapper -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.9</version>
		</dependency>
		<dependency>
			<groupId>com.autonomy</groupId>
			<artifactId>sitemesh</artifactId>
			<version>2.4.2</version>
		</dependency>
		<dependency>
			<groupId>com.autonomy.aci.client</groupId>
			<artifactId>autonomy-aci-annotations-processor</artifactId>
			<version>1.0.2</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.autonomy.aci.actions</groupId>
			<artifactId>autonomy-aci-actions-base</artifactId>
			<version>1.0.0-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.autonomy.aci.client</groupId>
			<artifactId>autonomy-aci-client-api</artifactId>
			<version>4.1.3</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.autonomy</groupId>
			<artifactId>NonAciNG</artifactId>
			<version>2.1.1</version>
			<scope>compile</scope>
		</dependency>
		<!--dependency>
			<groupId>com.autonomy.aci.content</groupId>
			<artifactId>autonomy-content-parameter-api</artifactId>
			<version>1.0.0</version>
			<scope>compile</scope>
		</dependency-->
		<dependency>
			<groupId>com.autonomy.web</groupId>
			<artifactId>autonomy-security-filters</artifactId>
			<version>1.0.1-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.autonomy</groupId>
			<artifactId>autonomy-testing</artifactId>
			<version>1.0.0-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-integration</artifactId>
			<version>1.3.RC2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.2.5.RELEASE</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>me.moocar</groupId>
			<artifactId>logback-gelf</artifactId>
			<version>0.9.6p2</version>
		</dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.1.2.Final</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>4.1.2.Final</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20090211</version>
		</dependency>
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt-spring3</artifactId>
			<version>1.9.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt</artifactId>
			<version>1.9.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-dependency-plugin</artifactId>
			<version>2.8</version>
		</dependency>

		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>0.9.1</version>
			<scope>test</scope>
		</dependency>		
		<dependency>
			<groupId>com.vertica</groupId>
			<artifactId>vertica-jdbc</artifactId>
			<version>7.1.2-0</version>			
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>7.0.47</version>			
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-juli</artifactId>
			<version>7.0.47</version>			
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>VerticaDialect</artifactId>
			<version>1.0.0</version>			
		</dependency>
	</dependencies>
</project>
